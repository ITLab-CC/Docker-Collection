version: '3'

services:
  app:
    container_name: crater-app
    build:
      args:
        user: crater-user
        uid: 1000
      context: ./
      dockerfile: Dockerfile
    image: crater-php
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
      - ./docker-compose/php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini:rw,delegated
    networks:
      - crater

  db:
    container_name: crater-db
    image: mariadb
    restart: always
    volumes:
      # - db:/var/lib/mysql
      # If you want to persist data on the host, comment the line above this one...
      # and uncomment the line under this one.
      - ./docker-compose/db/data:/var/lib/mysql:rw,delegated
    environment:
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - '33006:3306'
    networks:
      - crater

  nginx:
    container_name: crater-nginx
    image: nginx:1.17-alpine
    restart: unless-stopped
    #ports:
      #- 8083:80
    volumes:
      - ./:/var/www
      - ./docker-compose/nginx:/etc/nginx/conf.d/
    networks:
      - crater
      - proxy
    labels:
      - "traefik.enable=true"                                                       #<== Enable traefik
      - "traefik.http.routers.crater-secured.rule=Host(`finance.${DOMAIN}`)"    #<== Set domain
      - "traefik.http.routers.crater-secured.entrypoints=websecure"            #<== Set entry point for HTTPS
      - "traefik.http.routers.crater-secured.tls.certresolver=mytlschallenge"  #<== Set certsresolvers for https
      - "traefik.http.routers.crater-secured.middlewares=authelia"             #<== Add Authelia middlewares to protect login
      - "traefik.http.routers.crater-secured.service=crater-service"      #<== Set service
      - "traefik.http.services.crater-service.loadbalancer.server.port=80"     #<== Set target port on container

  cron:
    container_name: crater-cron
    build:
      context: ./
      dockerfile: ./docker-compose/cron.dockerfile
    volumes:
      - ./:/var/www
    networks:
      - crater

volumes:
  db:

networks:
  proxy:
      external: true
  crater:
    driver: bridge
